type Profile @key(fields: "email") {
  id: ID! @id
  email: String! @unique
  firstName: String
  lastName: String
  displayName: String
  birthday: String
  bio: String
  disability: String
  legal: String
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  events: [Event]! @relation(name: "Events")
  activities: [Activity]! @relation(name: "Profiles")
}

type Event {
  id: ID! @id
  type: String!
  title: String!
  host: String
  speakers: String
  startDate: String!
  endDate: String!
  startTime: String
  location: String!
  zoomLink: String
  sponsors: String
  imgUrl: String
  details: String
  activities: [Activity]! @relation(name: "Activity", onDelete: CASCADE)
  attendees: [Profile]! @relation(name: "Events")
}

type Activity {
  id: ID! @id
  name: String!
  startDate: String!
  location: String!
  startTime: String!
  endTime: String
  type: String!
  details: String
  event: Event! @relation(name: "Activity")
  participants: [Participant]! @relation(name: "Participant")
  athletes: [Profile]! @relation(name: "Athletes")
  volunteers: [Profile]! @relation(name: "Volunteers")
  coaches: [Profile]! @relation(name: "Coaches")
  other: [Profile]! @relation(name: "Other")
}
type Participant {
  id: ID! @id
  profile: Profile @relation(name: "Profile")
  roles: Role @relation(name: "Role")
}

enum Role {
  ATHLETE
  VOLUNTEER
  COACH
  SPECTATOR
}
